$date
	Tue Dec 19 12:34:22 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_alu $end
$var wire 1 ! zero $end
$var wire 32 " s [31:0] $end
$var wire 1 # overflow $end
$var reg 32 $ a [31:0] $end
$var reg 32 % b [31:0] $end
$var integer 32 & expected_overflow [31:0] $end
$var integer 32 ' expected_sum [31:0] $end
$var integer 32 ( i [31:0] $end
$scope module uut $end
$var wire 32 ) a [31:0] $end
$var wire 32 * b [31:0] $end
$var wire 1 ! sub $end
$var wire 1 + zeroflag $end
$var wire 32 , s [31:0] $end
$var wire 1 - ptemp $end
$var wire 1 # overflow $end
$var wire 1 . gtemp $end
$var wire 1 / ctemp $end
$scope module FastAdder_16_0 $end
$var wire 16 0 a [15:0] $end
$var wire 16 1 b [15:0] $end
$var wire 1 ! cin $end
$var wire 1 / cout $end
$var wire 16 2 g [15:0] $end
$var wire 1 3 gin $end
$var wire 16 4 p [15:0] $end
$var wire 1 5 pin $end
$var wire 16 6 s [15:0] $end
$var wire 1 - pout $end
$var wire 1 . gout $end
$var wire 15 7 ctemp [14:0] $end
$upscope $end
$scope module FastAdder_16_1 $end
$var wire 16 8 a [15:0] $end
$var wire 16 9 b [15:0] $end
$var wire 1 / cin $end
$var wire 1 # cout $end
$var wire 16 : g [15:0] $end
$var wire 1 . gin $end
$var wire 16 ; p [15:0] $end
$var wire 1 - pin $end
$var wire 16 < s [15:0] $end
$var wire 1 = pout $end
$var wire 1 > gout $end
$var wire 15 ? ctemp [14:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1 ?
0>
1=
b1101001010011110 <
b1101001010011101 ;
b1 :
b1100000010001001 9
b1001000010101 8
b111110000000000 7
b1001001110100101 6
z5
b111111110100101 4
z3
b1010000000000 2
b101111010000001 1
b11010100100100 0
0/
0.
0-
b11010010100111101001001110100101 ,
1+
b11000000100010010101111010000001 *
b10010000101010011010100100100 )
b0 (
bx '
bx &
b11000000100010010101111010000001 %
b10010000101010011010100100100 $
0#
b11010010100111101001001110100101 "
0!
$end
#10000
b1 &
b11010010100111101001001110100101 '
#20000
1/
1#
b101011000000011 7
b10110001101100 6
b110000000 ?
b110110011101010010110001101100 "
b110110011101010010110001101100 ,
b11011001110101 <
1-
1>
b101011000000001 2
b1101011001101011 4
b1000000010000000 :
b1011010111110100 ;
b101011001100011 1
b1011000111110000 9
b1101011000001001 0
b1000010010000100 8
b10110001111100000101011001100011 %
b10110001111100000101011001100011 *
b10000100100001001101011000001001 $
b10000100100001001101011000001001 )
b1 (
#30000
b0 &
b110110011101010010110001101100 '
#40000
0#
b111101100001101 7
b1010010011010 6
b11011111111 ?
b1001101100110010001010010011010 "
b1001101100110010001010010011010 ,
b100110110011001 <
0>
0=
b1100100001101 2
b1111101110001101 4
b11010011001 :
b100011011111111 ;
b1001100110001101 1
b100011011011111 9
b111101100001101 0
b11010111001 8
b1000110110111111001100110001101 %
b1000110110111111001100110001101 *
b110101110010111101100001101 $
b110101110010111101100001101 )
b10 (
#50000
b1001101100110010001010010011010 '
#60000
1#
0/
b110 ?
b0 7
b1101011001110111 6
b111011111110011101011001110111 "
b111011111110011101011001110111 ,
b11101111111001 <
1>
1=
b0 2
b1101011001110111 4
b1000000000000010 :
b1011101111110111 ;
b101001000010010 1
b1000100100110111 9
b1000010001100101 0
b1011001011000010 8
b10001001001101110101001000010010 %
b10001001001101110101001000010010 *
b10110010110000101000010001100101 $
b10110010110000101000010001100101 )
b11 (
#70000
b111011111110011101011001110111 '
#80000
1/
0#
b100111100000001 7
b1011000000001110 6
b11110111 ?
b111110010111011000000001110 "
b111110010111011000000001110 ,
b11111001011 <
1.
0>
0=
b1100000100000001 2
b1110111100001101 4
b11010011 :
b11011110111 ;
b1100110100001101 1
b11011010111 9
b1110001100000001 0
b11110011 8
b110110101111100110100001101 %
b110110101111100110100001101 *
b111100111110001100000001 $
b111100111110001100000001 )
b100 (
#90000
b111110010111011000000001110 '
#100000
b11111000001111 ?
b100000101111100 7
b1011111010110011 6
b1011001101100011011111010110011 "
b1011001101100011011111010110011 ,
b101100110110001 <
b1100000100110100 2
b1111110101111111 4
b1101000000001 :
b11111110101111 ;
b1100110100111101 1
b1111010001101 9
b1111000101110110 0
b11101100100011 8
b11110100011011100110100111101 %
b11110100011011100110100111101 *
b111011001000111111000101110110 $
b111011001000111111000101110110 )
b101 (
#110000
b1011001101100011011111010110011 '
#120000
b111011110001100 7
b100011011111101 ?
b100111101111001 6
b10111101000000100100111101111001 "
b10111101000000100100111101111001 ,
b1011110100000010 <
0.
b101011110001100 2
b1111011111101101 4
b100011000000100 :
b111011011111101 ;
b1111011110001100 1
b100011000101101 9
b101011111101101 0
b111011011010100 8
b1000110001011011111011110001100 %
b1000110001011011111011110001100 *
b1110110110101000101011111101101 $
b1110110110101000101011111101101 )
b110 (
#130000
b1 &
b10111101000000100100111101111001 '
#140000
1#
b110000111000000 7
b111111111111111 ?
b111010111111 6
b1100000001101010000111010111111 "
b1100000001101010000111010111111 ,
b110000000110101 <
1=
b10000011000000 2
b1110110111111111 4
b110000000110101 :
b1111111111111111 ;
b10010011000110 1
b1110001100110111 9
b1110100111111001 0
b111110011111101 8
b11100011001101110010010011000110 %
b11100011001101110010010011000110 *
b1111100111111011110100111111001 $
b1111100111111011110100111111001 )
b111 (
#150000
b1100000001101010000111010111111 '
#160000
b10000000 7
b100011111110111 ?
b101011101101111 6
b10111000000010110101011101101111 "
b10111000000010110101011101101111 ,
b1011100000001011 <
1.
1>
b1000000010000000 2
b1101011011101111 4
b1100000000010011 :
b1111011111110111 ;
b1101001010101010 1
b1101010100010011 9
b1000010011000101 0
b1110001011110111 8
b11010101000100111101001010101010 %
b11010101000100111101001010101010 *
b11100010111101111000010011000101 $
b11100010111101111000010011000101 )
b1000 (
#170000
b10111000000010110101011101101111 '
#180000
b111001111111111 ?
b111011111100111 7
b110101001011100 6
b101110100000100110101001011100 "
b101110100000100110101001011100 ,
b10111010000010 <
0.
0>
b111001001100101 2
b1111011111110111 4
b11001010000010 :
b1111101111111111 ;
b111001001110111 1
b1011101111010010 9
b1111011111100101 0
b111001010101111 8
b10111011110100100111001001110111 %
b10111011110100100111001001110111 *
b1110010101011111111011111100101 $
b1110010101011111111011111100101 )
b1001 (
#190000
b101110100000100110101001011100 '
#200000
b1010 (
